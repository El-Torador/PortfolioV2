/* eslint-disable react/no-unescaped-entities */
import Head from "next/head";
import Image from "next/image";
import tdd from "../../../public/images/articles/tdd.png";



export default function Article() {
  return (
    <>
      <Head>
        <title>Jordan Kagmeni ¬∑ Penser "Comportement" et "Feedback" gr√¢ce au TDD</title>
        <meta name="description" content="Penser 'Comportement' et 'Feedback' gr√¢ce au TDD" />
      </Head>
      <article className="pt-20 mx-auto w-3/6 lg:w-full lg:px-4 px-4 py-6 md:px-6 lg:py-16 md:py-12 dark:text-light">
        <div className="mx-auto">
          <div className="space-y-4 my-4">
            <h1 className="text-5xl md:text-3xl font-extrabold tracking-tight leading-[3.5rem] dark:text-light">
              Penser "Comportement" et "Feedback" gr√¢ce au TDD
            </h1>
            <p className="text-gray-500 dark:text-gray-400 dark:text-light/70">
              Gagner en efficacit√© et en qualit√© gr√¢ce au Test Driven Development
            </p>
          </div>
          <figure>
            <Image
              alt="Featured Image"
              className="aspect-video object-cover"
              height={340}
              src={tdd}
              width={1250}
            />
          </figure>
          <div className="mt-8">
            <small className="text-gray-500">TDD: Kezako ?ü§î</small>
            <p>
              Le TDD pour <b>Test Driven Development</b> est une m√©thode de d√©veloppement logiciel qui consiste √† √©crire les tests d'une fonctionnalit√© avant d'√©crire son impl√©mentation (donc le code de production). Cette m√©thode permet de garantir que le code d√©ploy√© est fonctionnel et r√©pond aux sp√©cifications attendues. Il vient aussi rajouter de la qualit√© dans le code produit tout en documentant celui-ci. Ce qui facilite la maintenance et assure la s√©curit√© des futures modifications. Par ailleurs, dans la communaut√© des d√©veloppeurs, le TDD est souvent connu comme un perd temps car √©crire des tests prend du temps et cel√† revient √† √©crire un double code (celui des test et celui qui va √™tre test√©). Nous sommes assez partag√© sur le sujet o√π d'un c√¥t√© on aura les puristes qui ne jurent que par le TDD, ensuite des neutres qui vont l'utiliser de temps en temps et enfin les opposants qui ne l'utilisent pas du tout.
            </p>
            <h3 className="my-6 ml-6 text-2xl font-bold tracking-tight dark:text-light">
              A. Contexte du D√©veloppement Pilot√© par les Tests (TDD)
            </h3>
            <p>
              Alors que la granularit√© de d√©veloppement √©tait un d√©tail lors de la construction des logiciel, aujourd‚Äôhui elle est entretenu grace aux TDD avec une adoption croissance par les entreprise depuis 2015 <b>(plus de 80% des entreprises Tech adoptent le TDD)</b>. En 2003, <b>Kent Beck</b> va d√©mocratiser le TDD dans son livre <b>"Test-Driven Development: By Example"</b> apr√®s avoir exp√©rimenter et promu ces id√©es en 1990 √† travers le mouvement <b>Extreme Programming (XP)</b>. Grace √† son brillant travail, la communaut√© commence √† s'int√©resser de plus en plus √† cette m√©thode et une plaitore d'outils de tests voient le jour. Le principe de cette m√©thode est de se concentrer sur les <b>comportements</b> afin de fournir un <b>Feedback rapide et de qualit√©</b>. Pour se faire, nous devons nous rassurer √† chaque it√©ration mineure que le code produit soit utile (pour ne pas avoir de code mort), ait le comportement attendu et ne casse pas les comportements existants.
            </p>
          </div>
          <h2 className="my-8 text-3xl font-bold tracking-tight dark:text-light">
            II. Priviligi√© "comportement" dans le TDD
          </h2>
          <div>
            <p>
              Le grand malheur des d√©veloppeurs est de penser "technique" et non "m√©tier" car la mod√©lisation syst√®me est extr√™mement mal enseign√©e. Aujourd'hui quand on se lance sur un projet, on a tendance √† se rabattre directement sur les technologies √† utiliser au lieu de se concentrer sur les aspects m√©tiers du syst√®me ce qui rend l'adoption du TDD dificile car c'est un exercice d'abstraction complexe auquel laplupart ne sont pas habitu√©s. Lorsqu'on veut tirer profit du TDD, il est plusque n√©cessaire d'encapsuler toutes les r√®gles m√©tiers qui vont constituer l'application avant de penser √† ce qu'on appelle les <b>d√©tails d'impl√©mentation</b>. Lorsqu'on s'assure que nos sp√©cifications m√©tiers sont fonctionnelles grace √† l'approbation des tests, nous pouvons rajouter d'autres couches en toute s√©r√©nit√©. Se concentrer sur le comportement nous permet non seulement d'√™tre efficace, mais aussi de pouvoir it√©rer rapidement sur les fonctionnalit√©s de l'application sans r√©gression.
            </p>
          </div>
          <h2 className="my-8 text-3xl font-bold tracking-tight dark:text-light">
            III. Importance du Retour d'Information dans le TDD
          </h2>
          <div>
            <p>
              Le retour d'information est un √©l√©ment cl√© dans le TDD et parfois n√©glig√© par les d√©veloppeurs ce qui fini par les rattraper. Il y'a de cel√† quelques ann√©es je d√©veloppais des API REST et la testait avec des logiciels comme <b><a href="https://www.postman.com/" target="_blank" className="underline">Postman</a></b> ou <b><a href="https://insomnia.rest/" target="_blank" className="underline">Insomnia</a></b>. Cette pratique marche tr√®s bien mais sur des projets √† petit √©chelle. J'ai √©t√© confront√© √† un projet √† grand √©chelle dans mon entreprise et c'est o√π je me suis pris un mur. Il fallait √† chaque fois lancer tous les services, d√©marrer le serveur, s'assurer que tout est up, faire la requette depuis postman. S'il y a eu un probl√®me, regarder la console et parfois retracer le source du probl√®me est impossible car on a aucun controle sur le flow d'execution donc on n'est contraint de lancer un d√©bouggeur qu'il faut configurer d√©pendament du projet sur lequel on travaille. On comprend tr√®s vite avec cette pratique que le retour d'information est trop tardif. <br /><br /> On teste toute une chaine pourtant nous aimerions tout juste tester un bout de cette chaine ce qui entraine des r√©sultats parfois incoh√©rents. Par contre, en traitant le probl√®me par granularit√©, on peut s'assurer que chaque brique joue son r√¥le attendu et  que l'ensemble fonctionne correctement.
            </p>
          </div>
          <h2 className="my-8 text-3xl font-bold tracking-tight dark:text-light">IV. Comment j'ai tir√© profit du TDD ?</h2>
          <p>
            Comme tout ing√©nieur, nous nous devons de trouver des solutions efficaces qui n'ont pas seulement fonctionn√©, mais aussi nous permettent d'√™tre plus productifs en se concentrant uniquement (dans la vie r√©elle, je dirai ¬´ le plus souvent ¬ª üòÖ) sur les aspects √† fort impact. Aujourd'hui, il existe beaucoup d'outils qui nous permettent de rapidement mettre en place un environnement avec ce qu'il faut, mais il reste encore √† savoir distinguer ce dont on a vraiment besoin et ce sur quoi on doit se concentrer. Lors de mon passage chez Azatys, j'ai pu intervenir sur divers projets de l'entreprise. <br /><br />L'un des plus capital √©tait la <a href="https://app.azatys.fr" target="_blank" className="underline">plateforme Azatys</a> qui reposait sur un processus complexe de suivi d'indicateurs digitaux des sites internet et des r√©seaux sociaux des clients et de leurs concurrents. Ce module de suivi fait appel √† de nombreux services, notamment l'<abbr title="Application Programming Interface">API</abbr> d'Azatys pour faire un certain nombre de calculs m√©tiers. Toute la plus-value de l'entreprise est bas√©e sur ces calculs, donc force est de constater que mon engouement allait se focaliser sur le strict fonctionnement de cet aspect m√©tier avant la c√©rise sur le gateau.<br /><br /> C'est l√† que le TDD intervient pour me permettre de r√©aliser cette t√¢che avec s√©curit√© et un feedback rapide. En d√©finissant les r√®gles m√©tiers avec les professionnels du m√©tier, cela me permet de r√©diger des tests sur lesquels ma solution s'appuiera pour s'assurer qu'elle coche toutes les sp√©cifications m√©tiers d√©finies. De la m√™me mani√®re, le TDD est un parfait match avec les m√©thodes agiles en gestion de projet, car gr√¢ce au feedback rapide, on peut d√©ployer des releases r√©guli√®rement aupr√®s des utilisateurs et it√©rer sans r√©gression. C'est ainsi que le TDD m'a permis (avec plus de 2 ans de pratique), de mettre en place un module qui se veut complexe en toute s√©r√©nit√©.
          </p>
          {/* <h2 className="my-8 text-3xl font-bold tracking-tight dark:text-light">V. Conclusion</h2>
          <p>

          </p> */}
          <h2 className="my-8 text-3xl font-bold tracking-tight dark:text-light">References:</h2>
          <div>
            <ul className="list-disc">
              <li>D. Melton, "Design Systems Thinking for Innovation in an Engineering Faculty Development Program", 2021</li>
              <li>Evan Rusoja, R. Chad Swanson, Mini Swift, "Using Systems Thinking and Complexity Theory to understand and improve Emergency Medicine: Lessons from COVID-19 in a safety net health system.", 2023</li>
              <li>Anna C. Schneider, O. Itani, Elizabeth M. Cronin, Dirk Bucher, F. Nadim, "the ANN "Evolution of the arthropod brain - from development to structure" Final Program", 2022</li>
              <li>Umaporn Yamubon, Therdpong Thongseiratch, "Using a Design Thinking Approach to Develop a Social Media-Based Parenting Program for Parents of Children With Attention-Deficit/Hyperactivity Disorder: Mixed Methods Study", 2023</li>
            </ul>
          </div>
        </div>
      </article>
    </>
  )
}